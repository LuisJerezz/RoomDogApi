// Generated by Dagger (https://dagger.dev).
package com.santi.pmdm.virgen.dogapicleanarchitecture.domain.usercase;

import com.santi.pmdm.virgen.dogapicleanarchitecture.data.repository.DogRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetDogsBreedUseCase_Factory implements Factory<GetDogsBreedUseCase> {
  private final Provider<DogRepository> dogRepositoryDaoProvider;

  public GetDogsBreedUseCase_Factory(Provider<DogRepository> dogRepositoryDaoProvider) {
    this.dogRepositoryDaoProvider = dogRepositoryDaoProvider;
  }

  @Override
  public GetDogsBreedUseCase get() {
    return newInstance(dogRepositoryDaoProvider.get());
  }

  public static GetDogsBreedUseCase_Factory create(
      Provider<DogRepository> dogRepositoryDaoProvider) {
    return new GetDogsBreedUseCase_Factory(dogRepositoryDaoProvider);
  }

  public static GetDogsBreedUseCase newInstance(DogRepository dogRepositoryDao) {
    return new GetDogsBreedUseCase(dogRepositoryDao);
  }
}
