// Generated by Dagger (https://dagger.dev).
package com.santi.pmdm.virgen.dogapicleanarchitecture.domain.usercase;

import com.santi.pmdm.virgen.dogapicleanarchitecture.data.datasource.database.dao.DogDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DeleteDogsFromDataBaseUseCase_Factory implements Factory<DeleteDogsFromDataBaseUseCase> {
  private final Provider<DogDao> dogRepositoryDaoProvider;

  public DeleteDogsFromDataBaseUseCase_Factory(Provider<DogDao> dogRepositoryDaoProvider) {
    this.dogRepositoryDaoProvider = dogRepositoryDaoProvider;
  }

  @Override
  public DeleteDogsFromDataBaseUseCase get() {
    return newInstance(dogRepositoryDaoProvider.get());
  }

  public static DeleteDogsFromDataBaseUseCase_Factory create(
      Provider<DogDao> dogRepositoryDaoProvider) {
    return new DeleteDogsFromDataBaseUseCase_Factory(dogRepositoryDaoProvider);
  }

  public static DeleteDogsFromDataBaseUseCase newInstance(DogDao dogRepositoryDao) {
    return new DeleteDogsFromDataBaseUseCase(dogRepositoryDao);
  }
}
