// Generated by Dagger (https://dagger.dev).
package com.santi.pmdm.virgen.dogapicleanarchitecture.data.repository;

import com.santi.pmdm.virgen.dogapicleanarchitecture.data.datasource.database.dao.DogDao;
import com.santi.pmdm.virgen.dogapicleanarchitecture.data.datasource.mem.service.DogService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DogRepository_Factory implements Factory<DogRepository> {
  private final Provider<DogService> serviceProvider;

  private final Provider<DogDao> dogDaoProvider;

  public DogRepository_Factory(Provider<DogService> serviceProvider,
      Provider<DogDao> dogDaoProvider) {
    this.serviceProvider = serviceProvider;
    this.dogDaoProvider = dogDaoProvider;
  }

  @Override
  public DogRepository get() {
    return newInstance(serviceProvider.get(), dogDaoProvider.get());
  }

  public static DogRepository_Factory create(Provider<DogService> serviceProvider,
      Provider<DogDao> dogDaoProvider) {
    return new DogRepository_Factory(serviceProvider, dogDaoProvider);
  }

  public static DogRepository newInstance(DogService service, DogDao dogDao) {
    return new DogRepository(service, dogDao);
  }
}
