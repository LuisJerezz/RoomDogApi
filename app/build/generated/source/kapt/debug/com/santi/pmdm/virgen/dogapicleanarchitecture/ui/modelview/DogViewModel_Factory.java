// Generated by Dagger (https://dagger.dev).
package com.santi.pmdm.virgen.dogapicleanarchitecture.ui.modelview;

import com.santi.pmdm.virgen.dogapicleanarchitecture.domain.usercase.DeleteDogsFromDataBaseUseCase;
import com.santi.pmdm.virgen.dogapicleanarchitecture.domain.usercase.GetDogsBreedUseCase;
import com.santi.pmdm.virgen.dogapicleanarchitecture.domain.usercase.GetDogsUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DogViewModel_Factory implements Factory<DogViewModel> {
  private final Provider<GetDogsUseCase> useCaseListProvider;

  private final Provider<GetDogsBreedUseCase> getDogsBreedUseCaseProvider;

  private final Provider<DeleteDogsFromDataBaseUseCase> userCaseDeleteDatabaseProvider;

  public DogViewModel_Factory(Provider<GetDogsUseCase> useCaseListProvider,
      Provider<GetDogsBreedUseCase> getDogsBreedUseCaseProvider,
      Provider<DeleteDogsFromDataBaseUseCase> userCaseDeleteDatabaseProvider) {
    this.useCaseListProvider = useCaseListProvider;
    this.getDogsBreedUseCaseProvider = getDogsBreedUseCaseProvider;
    this.userCaseDeleteDatabaseProvider = userCaseDeleteDatabaseProvider;
  }

  @Override
  public DogViewModel get() {
    return newInstance(useCaseListProvider.get(), getDogsBreedUseCaseProvider.get(), userCaseDeleteDatabaseProvider.get());
  }

  public static DogViewModel_Factory create(Provider<GetDogsUseCase> useCaseListProvider,
      Provider<GetDogsBreedUseCase> getDogsBreedUseCaseProvider,
      Provider<DeleteDogsFromDataBaseUseCase> userCaseDeleteDatabaseProvider) {
    return new DogViewModel_Factory(useCaseListProvider, getDogsBreedUseCaseProvider, userCaseDeleteDatabaseProvider);
  }

  public static DogViewModel newInstance(GetDogsUseCase useCaseList,
      GetDogsBreedUseCase getDogsBreedUseCase,
      DeleteDogsFromDataBaseUseCase userCaseDeleteDatabase) {
    return new DogViewModel(useCaseList, getDogsBreedUseCase, userCaseDeleteDatabase);
  }
}
